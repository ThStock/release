#!/bin/bash
# Released sowohl Shop- als auch sonstige Artefakte mit Hilfe des CI Servers
# TODO sollte auch verlinkt funktionieren $ ln -s ${this_file} ${HOME}/bin/release
set -eu

argLine="${*:-}"

if [[ -n $(echo "${argLine}" | egrep "replace") ]]; then
  pushd .  > /dev/null
  cd $(dirname $0)
  release_jar=$(dirname $0)/target/scala-2.12/release.jar
  jar_out="$(java -jar ${release_jar} 2>&1 || true)"
  cmp_out="$(cmp ${release_jar} $(dirname $0)/release.jar 2>&1 || true)"
  if [[ $(echo "$jar_out" | egrep -v "^Error: ") != "" ]] && [[ $(echo "$cmp_out" | egrep "differ") != "" ]]; then
    ls -l ${release_jar}
    ls -lh ${release_jar}
    cp -v ${release_jar} $(dirname $0)/release.jar
  fi
  popd > /dev/null
fi
release_jar=$(dirname $0)/release.jar
if command -v tput >/dev/null; then
  terminal_cols=$(tput cols)
else
  terminal_cols="80"
fi

if $(uname | egrep -iq "cygwin"); then
  os="Cygwin"
else
  os="$(uname)"
fi
if [[ "${os}" = "Cygwin" ]]; then
  set +e
  java -jar $(cygpath -aw ${release_jar}) "$(cygpath -aw $(dirname $0))" "$(cygpath -aw $(pwd))" "${os}" "${TERM}" "${terminal_cols}" ${argLine}
  java_exit=$?
  set -e
else
  set +e
  java -jar ${release_jar} "$(dirname $0)" "$(pwd)" "${os}" "${TERM}" "${terminal_cols}" ${argLine}
  java_exit=$?
  set -e
fi
if [[ ${java_exit} -eq 99 ]]; then
  if [[ ${ISHOP_RELEASE_UPDATE_AUTO:-0} -eq 1 ]]; then
    update_cmd=$(java -jar ${release_jar} "$(dirname $0)" "$(pwd)" "${os}" "${TERM}" "${terminal_cols}" --show-update-cmd)
    echo "I: starting self update"
    eval "${update_cmd}"
    echo "I: self update completed, please restart release"
  elif [[ ${ISHOP_RELEASE_UPDATE_AUTO:-0} -eq 0 ]]; then
    echo "I: release supports self updates: add 'export ISHOP_RELEASE_UPDATE_AUTO=1' to your e.g. .bash_profile to test it"
  fi
fi

